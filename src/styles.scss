// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$hassan-khan-web-primary: mat.define-palette(mat.$indigo-palette);
$hassan-khan-web-accent: mat.define-palette(mat.$deep-orange-palette);
$hassan-khan-web-primary-dark: mat.define-palette(mat.$indigo-palette);
$hassan-khan-web-accent-dark: mat.define-palette(mat.$deep-orange-palette);

// The warn palette is optional (defaults to red).
$hassan-khan-web-warn: mat.define-palette(mat.$red-palette);
$hassan-khan-web-warn-dark: mat.define-palette(mat.$red-palette);


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".


$hassan-khan-web-theme: mat.define-light-theme((
  color: (
    primary: $hassan-khan-web-primary,
    accent: $hassan-khan-web-accent,
    warn: $hassan-khan-web-warn,
  )
));
$hassan-khan-web-theme-dark: mat.define-dark-theme(
    (
      color: (
        primary: $hassan-khan-web-primary-dark,
        accent: $hassan-khan-web-accent-dark,
        warn: $hassan-khan-web-warn-dark,
      ),
    )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($hassan-khan-web-theme);

.darkMode {
  @include mat.all-component-colors($hassan-khan-web-theme-dark);
  color: white;
}

@import "../src/app/core/vaiables/breakpoints";
@import "../src/app/core/mixins/media-queries";

/* You can add global styles to this file, and also import other style files */

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  max-width: 100vw;
  overflow-x: hidden;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;

  &__column {
    flex-direction: column;
    display: flex;

  }
}

.column__center {
  flex-direction: column;
  display: flex;
  height: 100%;
  justify-content: center;
}


.m-w-h-100 {
  max-width: 100vw;
  min-height: 100vh;
}

.w-100 {
  width: 100%;
}

.h-100-vh {
  height: 100vh;
}

.h-90-vh {
  height: 90vh;
}

.notVisible {
  visibility: hidden;
}

@for $i from 1 through 10 {

  .mb-#{$i} {
    margin-bottom: #{$i}rem;
  }
  .mt-#{$i} {
    margin-top: #{$i}rem;
  }
  .ms-#{$i} {
    margin-left: #{$i}rem;
  }
  .me-#{$i} {
    margin-right: #{$i}rem;
  }
  .m-#{$i} {
    margin: #{$i}rem;
  }

  .pb-#{$i} {
    padding-bottom: #{$i}rem;
  }
  .pt-#{$i} {
    padding-top: #{$i}rem;
  }
  .ps-#{$i} {
    padding-left: #{$i}rem;
  }
  .pe-#{$i} {
    padding-right: #{$i}rem;
  }
  .p-#{$i} {
    padding: #{$i}rem;
  }
  .w-#{$i} {
    width: #{$i}vw;
  }
  .h-#{$i} {
    height: #{$i}vh;
  }
}

.white {
  color: white;
}

.header {
  width: 100%;
  height: 75px;
  display: flex;
  justify-content: flex-end;
  align-items: center;

  &__child {
    width: 50%;
    display: flex;
    justify-content: space-between;
    padding: 2rem;
  }
}


.bg-dark {
  background: rgb(40, 40, 40);
}

.header-light {
  background: #3f51b5 !important;
}

.header-light {
  background: #424242;
}

table {
  width: 100%;
}

@include narrower-than($bp-medium) {
  .mat-table {
    overflow-x: scroll;
  }

}

.min-width-1000 {
  min-width: 1000px;
}

.mat-cell,
.mat-header-cell {
  word-wrap: normal;
  padding: 0 10px;
  line-break: unset;
  min-width: 300px;
  vertical-align: middle;
  justify-content: center;
}

.mat-row,
.mat-header-row,
.mat-paginator {
  min-width: 1000px;
}

.img {
  width: 4vw;
  @include narrower-than($bp-large) {
    width: 12vw;
  }
}

